public class Solution {
	
  
public int pow(int x, int n, int d) {
	
	   
	    long rem = 1;
        int check = 0;
        long temp=1;
        
        if(x == 0){
            return 0;
        }
        if(n == 0){
            return 1;
        }
        if(d==0){
            
            return 0;
        }
       
        if(x < 0){
            x = Math.abs(x);
            if(n%2 != 0){
                return d-(int)rem;
            }
        }
        
        temp = x%d;
        
        while(n > 0){
            //exponentiation by squaring Algorithm
            if(n%2 == 1){
                rem = (rem*temp)%d;
                
            }
            
            temp = temp*(temp%d);
            temp = temp%d;
            
            n = n/2;
            if(rem > d){
                rem = rem%d;
            }
        }
        
      
        return (int)rem;
	}
	    
	 }  
	

